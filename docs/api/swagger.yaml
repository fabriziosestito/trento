basePath: /api
definitions:
  models.Check:
    properties:
      description:
        type: string
      group:
        type: string
      id:
        type: string
      implementation:
        type: string
      labels:
        type: string
      name:
        type: string
      remediation:
        type: string
      result:
        type: string
      selected:
        type: boolean
    type: object
  web.JSONCheck:
    properties:
      description:
        type: string
      group:
        type: string
      id:
        type: string
      implementation:
        type: string
      labels:
        type: string
      name:
        type: string
      remediation:
        type: string
    required:
    - group
    - id
    - name
    type: object
  web.JSONChecksGroup:
    properties:
      checks:
        items:
          $ref: '#/definitions/models.Check'
        type: array
      group:
        type: string
    type: object
  web.JSONChecksSettings:
    properties:
      connection_settings:
        additionalProperties:
          type: string
        type: object
      hosts:
        items:
          $ref: '#/definitions/web.Node'
        type: array
      selected_checks:
        items:
          type: string
        type: array
    required:
    - connection_settings
    - selected_checks
    type: object
  web.JSONTag:
    properties:
      tag:
        type: string
    required:
    - tag
    type: object
  web.Node:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      health:
        type: string
      ip:
        type: string
      name:
        type: string
      resources:
        items:
          $ref: '#/definitions/web.Resource'
        type: array
      sid:
        type: string
      virtualIps:
        items:
          type: string
        type: array
    type: object
  web.Resource:
    properties:
      failCount:
        type: integer
      id:
        type: string
      role:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
info:
  contact:
    email: trento-project@suse.com
    name: Trento Project
    url: https://www.trento-project.io
  description: Trento API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Trento API
  version: "1.0"
paths:
  /api/checks/{id}/settings:
    get:
      consumes:
      - application/json
      parameters:
      - description: Resource id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.JSONChecksSettings'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the check settings
    post:
      consumes:
      - application/json
      parameters:
      - description: Resource id
        in: path
        name: id
        required: true
        type: string
      - description: Checks settings
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.JSONChecksSettings'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.JSONChecksSettings'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create the check settings
  /api/checks/catalog:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/web.JSONChecksGroup'
            type: array
      summary: Get the whole checks' catalog
    put:
      parameters:
      - description: Checks catalog
        in: body
        name: Body
        required: true
        schema:
          items:
            $ref: '#/definitions/web.JSONCheck'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/web.JSONCheck'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create/Updates the checks catalog
  /api/clusters/{cluster_id}/results:
    get:
      parameters:
      - description: Cluster Id
        in: path
        name: cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a specific cluster's check results
  /api/clusters/{id}/tags:
    post:
      consumes:
      - application/json
      parameters:
      - description: Cluster id
        in: path
        name: id
        required: true
        type: string
      - description: The tag to create
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.JSONTag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.JSONTag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add tag to Cluster
  /api/clusters/{id}/tags/{tag}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Cluster id
        in: path
        name: id
        required: true
        type: string
      - description: Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties: true
            type: object
      summary: Delete a specific tag that belongs to a cluster
  /api/databases/{id}/tags:
    post:
      consumes:
      - application/json
      parameters:
      - description: Database id
        in: path
        name: id
        required: true
        type: string
      - description: The tag to create
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.JSONTag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.JSONTag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add tag to a HANA database
  /api/databases/{id}/tags/{tag}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Database id
        in: path
        name: id
        required: true
        type: string
      - description: Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties: true
            type: object
      summary: Delete a specific tag that belongs to a HANA database
  /api/hosts/{name}/tags:
    post:
      consumes:
      - application/json
      parameters:
      - description: Host name
        in: path
        name: name
        required: true
        type: string
      - description: The tag to create
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.JSONTag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.JSONTag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add tag to host
  /api/hosts/{name}/tags/{tag}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Host name
        in: path
        name: name
        required: true
        type: string
      - description: Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties: true
            type: object
      summary: Delete a specific tag that belongs to a host
  /api/sapsystems/{id}/tags:
    post:
      consumes:
      - application/json
      parameters:
      - description: SAPSystem id
        in: path
        name: id
        required: true
        type: string
      - description: The tag to create
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/web.JSONTag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.JSONTag'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add tag to SAPSystem
  /api/sapsystems/{id}/tags/{tag}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SAPSystem id
        in: path
        name: id
        required: true
        type: string
      - description: Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties: true
            type: object
      summary: Delete a specific tag that belongs to a SAPSystem
  /api/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: Filter by resource type
        in: query
        name: resource_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all the tags in the system
schemes:
- http
swagger: "2.0"
